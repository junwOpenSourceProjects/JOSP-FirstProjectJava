<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wo1261931780.javaFirst.dao.History22ReviewMapper">
  <resultMap id="BaseResultMap" type="wo1261931780.javaFirst.entity.History22Review">
    <!--@mbg.generated-->
    <!--@Table history22_review-->
    <id column="rank" jdbcType="INTEGER" property="rank" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_code" jdbcType="VARCHAR" property="studentCode" />
    <result column="subject_code" jdbcType="INTEGER" property="subjectCode" />
    <result column="subject_name" jdbcType="VARCHAR" property="subjectName" />
    <result column="score_polite" jdbcType="INTEGER" property="scorePolite" />
    <result column="score_english" jdbcType="INTEGER" property="scoreEnglish" />
    <result column="score_professional_1" jdbcType="INTEGER" property="scoreProfessional1" />
    <result column="score_professional_2" jdbcType="INTEGER" property="scoreProfessional2" />
    <result column="score_total" jdbcType="INTEGER" property="scoreTotal" />
    <result column="score_total_public" jdbcType="INTEGER" property="scoreTotalPublic" />
    <result column="score_total_professional" jdbcType="INTEGER" property="scoreTotalProfessional" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    `rank`, student_name, student_code, subject_code, subject_name, score_polite, score_english, 
    score_professional_1, score_professional_2, score_total, score_total_public, score_total_professional
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update history22_review
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="student_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.studentName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="student_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.studentCode,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="subject_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.subjectCode,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="subject_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.subjectName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="score_polite = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scorePolite,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="score_english = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreEnglish,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="score_professional_1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreProfessional1,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="score_professional_2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreProfessional2,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="score_total = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotal,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="score_total_public = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotalPublic,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="score_total_professional = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotalProfessional,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where `rank` in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.rank,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update history22_review
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="student_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.studentName != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.studentName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="student_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.studentCode != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.studentCode,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="subject_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.subjectCode != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.subjectCode,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="subject_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.subjectName != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.subjectName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="score_polite = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.scorePolite != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scorePolite,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="score_english = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.scoreEnglish != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreEnglish,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="score_professional_1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.scoreProfessional1 != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreProfessional1,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="score_professional_2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.scoreProfessional2 != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreProfessional2,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="score_total = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.scoreTotal != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotal,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="score_total_public = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.scoreTotalPublic != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotalPublic,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="score_total_professional = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.scoreTotalProfessional != null">
            when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotalProfessional,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where `rank` in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.rank,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into history22_review
    (`rank`, student_name, student_code, subject_code, subject_name, score_polite, score_english, 
      score_professional_1, score_professional_2, score_total, score_total_public, score_total_professional
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.rank,jdbcType=INTEGER}, #{item.studentName,jdbcType=VARCHAR}, #{item.studentCode,jdbcType=VARCHAR}, 
        #{item.subjectCode,jdbcType=INTEGER}, #{item.subjectName,jdbcType=VARCHAR}, #{item.scorePolite,jdbcType=INTEGER}, 
        #{item.scoreEnglish,jdbcType=INTEGER}, #{item.scoreProfessional1,jdbcType=INTEGER}, 
        #{item.scoreProfessional2,jdbcType=INTEGER}, #{item.scoreTotal,jdbcType=INTEGER}, 
        #{item.scoreTotalPublic,jdbcType=INTEGER}, #{item.scoreTotalProfessional,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="wo1261931780.javaFirst.entity.History22Review">
    <!--@mbg.generated-->
    insert into history22_review
    (`rank`, student_name, student_code, subject_code, subject_name, score_polite, score_english, 
      score_professional_1, score_professional_2, score_total, score_total_public, score_total_professional
      )
    values
    (#{rank,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{studentCode,jdbcType=VARCHAR}, 
      #{subjectCode,jdbcType=INTEGER}, #{subjectName,jdbcType=VARCHAR}, #{scorePolite,jdbcType=INTEGER}, 
      #{scoreEnglish,jdbcType=INTEGER}, #{scoreProfessional1,jdbcType=INTEGER}, #{scoreProfessional2,jdbcType=INTEGER}, 
      #{scoreTotal,jdbcType=INTEGER}, #{scoreTotalPublic,jdbcType=INTEGER}, #{scoreTotalProfessional,jdbcType=INTEGER}
      )
    on duplicate key update 
    `rank` = #{rank,jdbcType=INTEGER}, 
    student_name = #{studentName,jdbcType=VARCHAR}, 
    student_code = #{studentCode,jdbcType=VARCHAR}, 
    subject_code = #{subjectCode,jdbcType=INTEGER}, 
    subject_name = #{subjectName,jdbcType=VARCHAR}, 
    score_polite = #{scorePolite,jdbcType=INTEGER}, 
    score_english = #{scoreEnglish,jdbcType=INTEGER}, 
    score_professional_1 = #{scoreProfessional1,jdbcType=INTEGER}, 
    score_professional_2 = #{scoreProfessional2,jdbcType=INTEGER}, 
    score_total = #{scoreTotal,jdbcType=INTEGER}, 
    score_total_public = #{scoreTotalPublic,jdbcType=INTEGER}, 
    score_total_professional = #{scoreTotalProfessional,jdbcType=INTEGER}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="wo1261931780.javaFirst.entity.History22Review">
    <!--@mbg.generated-->
    insert into history22_review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rank != null">
        `rank`,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentCode != null">
        student_code,
      </if>
      <if test="subjectCode != null">
        subject_code,
      </if>
      <if test="subjectName != null">
        subject_name,
      </if>
      <if test="scorePolite != null">
        score_polite,
      </if>
      <if test="scoreEnglish != null">
        score_english,
      </if>
      <if test="scoreProfessional1 != null">
        score_professional_1,
      </if>
      <if test="scoreProfessional2 != null">
        score_professional_2,
      </if>
      <if test="scoreTotal != null">
        score_total,
      </if>
      <if test="scoreTotalPublic != null">
        score_total_public,
      </if>
      <if test="scoreTotalProfessional != null">
        score_total_professional,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentCode != null">
        #{studentCode,jdbcType=VARCHAR},
      </if>
      <if test="subjectCode != null">
        #{subjectCode,jdbcType=INTEGER},
      </if>
      <if test="subjectName != null">
        #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="scorePolite != null">
        #{scorePolite,jdbcType=INTEGER},
      </if>
      <if test="scoreEnglish != null">
        #{scoreEnglish,jdbcType=INTEGER},
      </if>
      <if test="scoreProfessional1 != null">
        #{scoreProfessional1,jdbcType=INTEGER},
      </if>
      <if test="scoreProfessional2 != null">
        #{scoreProfessional2,jdbcType=INTEGER},
      </if>
      <if test="scoreTotal != null">
        #{scoreTotal,jdbcType=INTEGER},
      </if>
      <if test="scoreTotalPublic != null">
        #{scoreTotalPublic,jdbcType=INTEGER},
      </if>
      <if test="scoreTotalProfessional != null">
        #{scoreTotalProfessional,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="rank != null">
        `rank` = #{rank,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentCode != null">
        student_code = #{studentCode,jdbcType=VARCHAR},
      </if>
      <if test="subjectCode != null">
        subject_code = #{subjectCode,jdbcType=INTEGER},
      </if>
      <if test="subjectName != null">
        subject_name = #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="scorePolite != null">
        score_polite = #{scorePolite,jdbcType=INTEGER},
      </if>
      <if test="scoreEnglish != null">
        score_english = #{scoreEnglish,jdbcType=INTEGER},
      </if>
      <if test="scoreProfessional1 != null">
        score_professional_1 = #{scoreProfessional1,jdbcType=INTEGER},
      </if>
      <if test="scoreProfessional2 != null">
        score_professional_2 = #{scoreProfessional2,jdbcType=INTEGER},
      </if>
      <if test="scoreTotal != null">
        score_total = #{scoreTotal,jdbcType=INTEGER},
      </if>
      <if test="scoreTotalPublic != null">
        score_total_public = #{scoreTotalPublic,jdbcType=INTEGER},
      </if>
      <if test="scoreTotalProfessional != null">
        score_total_professional = #{scoreTotalProfessional,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>